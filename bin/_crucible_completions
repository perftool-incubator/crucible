#!/usr/bin/env bash
# vim: autoindent tabstop=4 shiftwidth=4 expandtab softtabstop=4 filetype=bash
# -*- mode: sh; indent-tabs-mode: nil; sh-basic-offset: 4 -*-

_crucible_completions() {
    if [ -z "$CRUCIBLE_HOME" ]; then
        if [ -e /etc/crucible.conf ]; then
            . /etc/crucible.conf
            if [ -z "$CRUCIBLE_HOME" ]; then
                return
            fi
        else
            return
        fi
    fi
    num_words=${#COMP_WORDS[@]} # Total number of words on the command
    let num_index=$num_words-1
    if [ $num_words -eq 2 ]; then
        COMPREPLY=($(compgen -W "help log repo update run wrapper console start get" -- "${COMP_WORDS[1]}"))
    elif [ $num_words -eq 3 ]; then
        case "${COMP_WORDS[1]}" in
            help)
                COMPREPLY=($(compgen -W "log repo update run" -- "${COMP_WORDS[2]}"))
                ;;
            log)
                COMPREPLY=($(compgen -W "clear info init view" -- "${COMP_WORDS[2]}"))
                ;;
            get)
                COMPREPLY=($(compgen -W "result metric" -- "${COMP_WORDS[2]}"))
                ;;
            repo)
                COMPREPLY=($(compgen -W "status" -- "${COMP_WORDS[2]}"))
                ;;
            update)
                COMPREPLY=($(compgen -W "all crucible $(cd $CRUCIBLE_HOME/subprojects/; find . -type l | sed 'sX./XX')" -- "${COMP_WORDS[2]}"))
                ;;
            run)
                COMPREPLY=($(compgen -W "$(cd $CRUCIBLE_HOME/subprojects/benchmarks/; find . -mindepth 1 -maxdepth 1 -type l | sed 'sX./XX')" -- "${COMP_WORDS[2]}"))
                ;;
            start)
                COMPREPLY=($(compgen -W "httpd es" -- "${COMP_WORDS[2]}"))
                ;;
        esac
    elif [ "$(expr $num_words % 2)" -eq 0 -a ${COMP_WORDS[1]} == "repo" ]; then
        case "${COMP_WORDS[2]}" in
            status)
                COMPREPLY=($(compgen -W "all crucible $(cd $CRUCIBLE_HOME/subprojects/; find . -type l | sed 'sX./XX')" -- "${COMP_WORDS[3]}"))
                ;;
        esac
    elif [ "$(expr $num_words % 2)" -eq 0 -a ${COMP_WORDS[1]} == "run" ]; then
        params=""
        rickshaw_params_file="$CRUCIBLE_HOME/subprojects/core/rickshaw/params"
        if [ -e $rickshaw_params_file ]; then
            params="$params $(cat $rickshaw_params_file)"
        fi
        COMPREPLY=($(compgen -W "$params" -- "${COMP_WORDS[$num_index]}"))
    fi
}

complete -F _crucible_completions crucible
